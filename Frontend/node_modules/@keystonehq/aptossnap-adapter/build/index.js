"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
var aptos_1 = require("aptos");
var defaultSnapOrigin = 'npm:@keystonehq/aptossnap';
__exportStar(require("./utils"), exports);
var WalletAdapter = /** @class */ (function () {
    function WalletAdapter(config, snapOrigin, snapInstallationParams) {
        if (snapInstallationParams === void 0) { snapInstallationParams = {
            version: 'latest'
        }; }
        this._connecting = false;
        this.config = config;
        this.snapId = snapOrigin !== null && snapOrigin !== void 0 ? snapOrigin : defaultSnapOrigin;
        this.snapInstallationParams = snapInstallationParams;
    }
    Object.defineProperty(WalletAdapter.prototype, "connecting", {
        get: function () {
            return this._connecting;
        },
        enumerable: false,
        configurable: true
    });
    WalletAdapter.prototype.isConnected = function () {
        var _a;
        return Promise.resolve(!!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected));
    };
    WalletAdapter.prototype.account = function () {
        var _a, _b;
        if (this.connecting) {
            throw new Error('Already in connecting status');
        }
        if (!this.isConnected()) {
            throw new Error('Connect first');
        }
        else {
            return Promise.resolve({
                publicKey: ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null,
                address: ((_b = this._wallet) === null || _b === void 0 ? void 0 : _b.address) || null
            });
        }
    };
    WalletAdapter.prototype.connect = function () {
        return __awaiter(this, void 0, void 0, function () {
            var isInstalled, result;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, , 9, 10]);
                        if (this.connecting) {
                            throw new Error('Already in connecting status');
                        }
                        this._connecting = true;
                        // check all conditions
                        if (!utils_1.hasMetaMask()) {
                            throw new Error('Metamask is not installed');
                        }
                        return [4 /*yield*/, utils_1.isMetamaskSnapsSupported()];
                    case 1:
                        if (!(_b.sent())) {
                            throw new Error("Current Metamask version doesn't support snaps");
                        }
                        this._connecting = true;
                        return [4 /*yield*/, utils_1.isSnapInstalled(this.snapId)];
                    case 2:
                        isInstalled = _b.sent();
                        if (!!isInstalled) return [3 /*break*/, 4];
                        return [4 /*yield*/, window.ethereum.request({
                                method: 'wallet_enable',
                                params: [
                                    {
                                        wallet_snap: (_a = {},
                                            _a[this.snapId] = this.snapInstallationParams,
                                            _a)
                                    }
                                ]
                            })];
                    case 3:
                        _b.sent();
                        _b.label = 4;
                    case 4:
                        if (!!this.config.network) return [3 /*break*/, 5];
                        throw new Error('Configuration must at least define network type');
                    case 5: 
                    // sync the snap network
                    return [4 /*yield*/, window.ethereum.request({
                            method: 'wallet_invokeSnap',
                            params: [this.snapId, {
                                    method: 'aptos_configure',
                                    params: {
                                        configuration: {
                                            network: this.config.network
                                        }
                                    }
                                }]
                        })];
                    case 6:
                        // sync the snap network
                        _b.sent();
                        _b.label = 7;
                    case 7: return [4 /*yield*/, window.ethereum.request({
                            method: 'wallet_invokeSnap',
                            params: [
                                this.snapId,
                                {
                                    method: 'aptos_getAccount'
                                }
                            ]
                        })];
                    case 8:
                        result = _b.sent();
                        this._wallet = {
                            address: result.address,
                            publicKey: result.publicKey,
                            isConnected: true
                        };
                        return [2 /*return*/, result];
                    case 9:
                        this._connecting = false;
                        return [7 /*endfinally*/];
                    case 10: return [2 /*return*/];
                }
            });
        });
    };
    WalletAdapter.prototype.disconnect = function () {
        return __awaiter(this, void 0, void 0, function () {
            var wallet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        wallet = this._wallet;
                        // clean up snap state
                        return [4 /*yield*/, window.ethereum.request({
                                method: 'wallet_invokeSnap',
                                params: [
                                    this.snapId,
                                    {
                                        method: 'aptos_disconnect'
                                    }
                                ]
                            })];
                    case 1:
                        // clean up snap state
                        _a.sent();
                        if (wallet) {
                            this._wallet = null;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    WalletAdapter.prototype.getClient = function () {
        var nodeUrl = utils_1.getConfigurationByNetwork(this.config.network).rpc.node;
        return new aptos_1.AptosClient(nodeUrl);
    };
    WalletAdapter.prototype.signAndSubmitTransaction = function (transactionPayload, options) {
        return __awaiter(this, void 0, void 0, function () {
            var client, rawTransaction, s, signedTx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        client = this.getClient();
                        return [4 /*yield*/, client.generateTransaction(this._wallet.address, transactionPayload, options)];
                    case 1:
                        rawTransaction = _a.sent();
                        s = new aptos_1.BCS.Serializer();
                        rawTransaction.serialize(s);
                        return [4 /*yield*/, window.ethereum.request({
                                method: 'wallet_invokeSnap',
                                params: [
                                    this.snapId,
                                    {
                                        method: 'aptos_signTransaction',
                                        params: { rawTransaction: s.getBytes() }
                                    }
                                ]
                            })];
                    case 2:
                        signedTx = _a.sent();
                        return [2 /*return*/, client.submitTransaction(new Uint8Array(Object.values(signedTx)))];
                }
            });
        });
    };
    WalletAdapter.prototype.signTransaction = function (transactionPayload) {
        return __awaiter(this, void 0, void 0, function () {
            var client, rawTransaction, s, signedTx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        client = this.getClient();
                        return [4 /*yield*/, client.generateTransaction(this._wallet.address, transactionPayload)];
                    case 1:
                        rawTransaction = _a.sent();
                        s = new aptos_1.BCS.Serializer();
                        rawTransaction.serialize(s);
                        return [4 /*yield*/, window.ethereum.request({
                                method: 'wallet_invokeSnap',
                                params: [
                                    this.snapId,
                                    {
                                        method: 'aptos_signTransaction',
                                        params: { rawTransaction: s.getBytes() }
                                    }
                                ]
                            })];
                    case 2:
                        signedTx = _a.sent();
                        return [2 /*return*/, new Uint8Array(Object.values(signedTx))];
                }
            });
        });
    };
    WalletAdapter.prototype.signMessage = function (payload) {
        return __awaiter(this, void 0, void 0, function () {
            var client, prefix, fullMessage, address, chainId, _a, application, rawMessage, signature;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        client = this.getClient();
                        prefix = 'APTOS';
                        fullMessage = prefix;
                        address = payload.address ? this._wallet.address : undefined;
                        if (!payload.chainId) return [3 /*break*/, 2];
                        return [4 /*yield*/, client.getChainId()];
                    case 1:
                        _a = _b.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _a = undefined;
                        _b.label = 3;
                    case 3:
                        chainId = _a;
                        application = payload.application ? window.location.hostname : undefined;
                        if (address) {
                            fullMessage += "\naddress: " + address;
                        }
                        if (chainId) {
                            fullMessage += "\nchainId: " + chainId;
                        }
                        if (application) {
                            fullMessage += "\napplication: " + application;
                        }
                        fullMessage += "\nmessage: " + payload.message;
                        fullMessage += "\nnonce: " + payload.nonce;
                        rawMessage = {
                            prefix: prefix,
                            address: address,
                            chainId: chainId,
                            application: application,
                            nonce: payload.nonce,
                            message: payload.message,
                            fullMessage: fullMessage
                        };
                        Object.keys(rawMessage).forEach(function (key) { return rawMessage[key] === undefined && delete rawMessage[key]; });
                        return [4 /*yield*/, window.ethereum.request({
                                method: 'wallet_invokeSnap',
                                params: [
                                    this.snapId,
                                    {
                                        method: 'aptos_signMessage',
                                        params: { message: rawMessage }
                                    }
                                ]
                            })];
                    case 4:
                        signature = _b.sent();
                        return [2 /*return*/, __assign(__assign({}, rawMessage), { signature: "" + signature + Buffer.from(fullMessage).toString('hex') })];
                }
            });
        });
    };
    return WalletAdapter;
}());
exports.default = WalletAdapter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQ0FLZ0I7QUFRaEIsK0JBQXdDO0FBR3hDLElBQU0saUJBQWlCLEdBQUcsMkJBQTJCLENBQUE7QUFFckQsMENBQXVCO0FBSXZCO0lBT0UsdUJBQWEsTUFBa0IsRUFDN0IsVUFBbUIsRUFDbkIsc0JBRUM7UUFGRCx1Q0FBQSxFQUFBO1lBQ0UsT0FBTyxFQUFFLFFBQVE7U0FDbEI7UUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQTtRQUN4QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQTtRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLFVBQVUsYUFBVixVQUFVLGNBQVYsVUFBVSxHQUFJLGlCQUFpQixDQUFBO1FBQzdDLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxzQkFBc0IsQ0FBQTtJQUN0RCxDQUFDO0lBRUQsc0JBQUkscUNBQVU7YUFBZDtZQUNFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQTtRQUN6QixDQUFDOzs7T0FBQTtJQUVELG1DQUFXLEdBQVg7O1FBQ0UsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBLE1BQUEsSUFBSSxDQUFDLE9BQU8sMENBQUUsV0FBVyxDQUFBLENBQUMsQ0FBQTtJQUNyRCxDQUFDO0lBRUQsK0JBQU8sR0FBUDs7UUFDRSxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFBO1NBQ2hEO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1NBQ2pDO2FBQU07WUFDTCxPQUFPLE9B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