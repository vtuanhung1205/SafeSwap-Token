{"version":3,"file":"index.js","sources":["../../transformers/dist/index.js","../src/env/hasWebviewProxy.ts","../src/env/isIframe.ts","../../toolkit/dist/index.js","../../signals/dist/index.js","../src/debug.ts","../src/events/transformers.ts","../src/events/listening/lastEvent.ts","../src/events/listening/signalFor.ts","../src/events/listening/on.ts","../src/errors.ts","../src/methods/$targetOrigin.ts","../src/methods/postEvent.ts","../src/utils/request.ts","../src/launch-params/parseLaunchParams.ts","../src/launch-params/retrieveFromUrl.ts","../src/launch-params/retrieveFromLocation.ts","../src/launch-params/retrieveFromPerformance.ts","../src/launch-params/storage.ts","../src/launch-params/retrieveLaunchParams.ts","../src/env/isTMA.ts","../src/events/emitMiniAppsEvent.ts","../src/env/mockTelegramEnv.ts","../src/events/listening/defineEventHandlers.ts","../src/events/listening/removeEventHandlers.ts","../src/events/listening/off.ts","../src/events/listening/subscribe.ts","../src/events/listening/unsubscribe.ts","../src/methods/captureSameReq.ts","../src/utils/compareVersions.ts","../src/methods/supports.ts","../src/methods/createPostEvent.ts","../src/utils/invokeCustomMethod.ts","../src/resetPackageState.ts"],"sourcesContent":["class u extends Error {\n  constructor(e, r, n) {\n    super(\n      typeof r == \"object\" ? r.message : r || e,\n      {\n        cause: typeof r == \"object\" ? r.cause : n\n      }\n    ), this.type = e, this.name = \"TypedError\", Object.setPrototypeOf(this, u.prototype);\n  }\n}\nfunction h(t) {\n  return t.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);\n}\nfunction S(t) {\n  return t.replace(/_[a-z]/g, (e) => e[1].toUpperCase());\n}\nconst w = \"ERR_INVALID_VALUE\", D = \"ERR_UNEXPECTED_VALUE\", W = \"ERR_UNEXPECTED_TYPE\", d = \"ERR_PARSE\";\nfunction A(t, e) {\n  const r = {};\n  for (const n in t) {\n    const o = t[n];\n    if (!o)\n      continue;\n    let a, c;\n    typeof o == \"function\" ? (a = n, c = o) : [a, c] = o;\n    try {\n      const s = c(e(a));\n      s !== void 0 && (r[n] = s);\n    } catch (s) {\n      throw new u(\n        d,\n        `Parser for \"${n}\" property failed${a === n ? \"\" : `. Source field: \"${a}\"`}`,\n        s\n      );\n    }\n  }\n  return r;\n}\nfunction P(t) {\n  let e = t;\n  if (typeof e == \"string\")\n    try {\n      e = JSON.parse(e);\n    } catch (r) {\n      throw new u(w, { cause: r });\n    }\n  if (typeof e != \"object\" || !e || Array.isArray(e))\n    throw new u(D);\n  return e;\n}\nfunction i(t, e) {\n  return (r) => {\n    const n = (o) => {\n      if (!(r && o === void 0))\n        try {\n          return e(o);\n        } catch (a) {\n          throw new u(d, {\n            message: `\"${t}\" transformer failed to parse the value`,\n            cause: a\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      n,\n      {\n        isValid(o) {\n          try {\n            return n(o), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction m(t, e) {\n  return i(e || \"object\", (r) => {\n    const n = P(r);\n    return A(t, (o) => n[o]);\n  });\n}\nfunction p(t) {\n  throw new u(W, `Unexpected value received: ${JSON.stringify(t)}`);\n}\nconst E = i(\"boolean\", (t) => {\n  if (typeof t == \"boolean\")\n    return t;\n  const e = String(t);\n  if (e === \"1\" || e === \"true\")\n    return !0;\n  if (e === \"0\" || e === \"false\")\n    return !1;\n  p(t);\n}), f = i(\"string\", (t) => {\n  if (typeof t == \"string\" || typeof t == \"number\")\n    return t.toString();\n  p(t);\n}), g = i(\"number\", (t) => {\n  if (typeof t == \"number\")\n    return t;\n  if (typeof t == \"string\") {\n    const e = Number(t);\n    if (!Number.isNaN(e))\n      return e;\n  }\n  p(t);\n}), U = i(\"date\", (t) => t instanceof Date ? t : new Date(g()(t) * 1e3));\nfunction R(t, e) {\n  return i(e || \"searchParams\", (r) => {\n    typeof r != \"string\" && !(r instanceof URLSearchParams) && p(r);\n    const n = typeof r == \"string\" ? new URLSearchParams(r) : r;\n    return A(t, (o) => {\n      const a = n.get(o);\n      return a === null ? void 0 : a;\n    });\n  });\n}\nfunction l(t) {\n  for (const e in t)\n    t[e] = [h(e), t[e]];\n  return t;\n}\nconst N = (t) => {\n  const e = g(), r = g(!0), n = f(), o = f(!0), a = E(!0), c = m(l({\n    addedToAttachmentMenu: a,\n    allowsWriteToPm: a,\n    firstName: n,\n    id: e,\n    isBot: a,\n    isPremium: a,\n    languageCode: o,\n    lastName: o,\n    photoUrl: o,\n    username: o\n  }), \"User\")(!0);\n  return R(\n    l({\n      authDate: U(),\n      canSendAfter: r,\n      chat: m(\n        l({\n          id: e,\n          type: n,\n          title: n,\n          photoUrl: o,\n          username: o\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: o,\n      chatType: o,\n      hash: n,\n      queryId: o,\n      receiver: c,\n      startParam: o,\n      signature: n,\n      user: c\n    }),\n    \"initData\"\n  )(t);\n};\nfunction O(t) {\n  return /^#[\\da-f]{6}$/i.test(t);\n}\nfunction T(t) {\n  return /^#[\\da-f]{3}$/i.test(t);\n}\nfunction _(t) {\n  const e = t.replace(/\\s/g, \"\").toLowerCase();\n  if (O(e))\n    return e;\n  if (T(e)) {\n    let n = \"#\";\n    for (let o = 0; o < 3; o += 1)\n      n += e[1 + o].repeat(2);\n    return n;\n  }\n  const r = e.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || e.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!r)\n    throw new Error(`Value \"${t}\" does not satisfy any of known RGB formats.`);\n  return r.slice(1).reduce((n, o) => {\n    const a = parseInt(o, 10).toString(16);\n    return n + (a.length === 1 ? \"0\" : \"\") + a;\n  }, \"#\");\n}\nconst C = i(\"rgb\", (t) => _(f()(t))), b = i(\n  \"themeParams\",\n  (t) => {\n    const e = C(!0);\n    return Object.entries(P(t)).reduce((r, [n, o]) => (r[S(n)] = e(o), r), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction y(t) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(t).map(([e, r]) => [h(e), r])\n    )\n  );\n}\nconst V = (t) => {\n  const e = f(), r = f(!0), n = E(!0);\n  return R({\n    botInline: [\"tgWebAppBotInline\", n],\n    defaultColors: [\"tgWebAppDefaultColors\", b(!0)],\n    fullscreen: [\"tgWebAppFullscreen\", n],\n    initData: [\"tgWebAppData\", N(!0)],\n    initDataRaw: [\"tgWebAppData\", r],\n    platform: [\"tgWebAppPlatform\", e],\n    showSettings: [\"tgWebAppShowSettings\", n],\n    startParam: [\"tgWebAppStartParam\", r],\n    themeParams: [\"tgWebAppThemeParams\", b()],\n    version: [\"tgWebAppVersion\", e]\n  }, \"launchParams\")(t);\n};\n// @__NO_SIDE_EFFECTS__\nfunction $(t) {\n  const {\n    initDataRaw: e,\n    startParam: r,\n    showSettings: n,\n    botInline: o,\n    fullscreen: a,\n    defaultColors: c\n  } = t, s = new URLSearchParams();\n  return s.set(\"tgWebAppPlatform\", t.platform), s.set(\"tgWebAppThemeParams\", /* @__PURE__ */ y(t.themeParams)), s.set(\"tgWebAppVersion\", t.version), e && s.set(\"tgWebAppData\", e), r && s.set(\"tgWebAppStartParam\", r), typeof n == \"boolean\" && s.set(\"tgWebAppShowSettings\", n ? \"1\" : \"0\"), typeof o == \"boolean\" && s.set(\"tgWebAppBotInline\", o ? \"1\" : \"0\"), typeof a == \"boolean\" && s.set(\"tgWebAppFullscreen\", a ? \"1\" : \"0\"), c && s.set(\"tgWebAppDefaultColors\", /* @__PURE__ */ y(c)), s.toString();\n}\nconst j = m({\n  eventType: f(),\n  eventData: (t) => t\n}, \"miniAppsMessage\");\nfunction L(t, e) {\n  return i(e || \"array\", (r) => {\n    let n;\n    if (Array.isArray(r))\n      n = r;\n    else if (typeof r == \"string\")\n      try {\n        const o = JSON.parse(r);\n        Array.isArray(o) && (n = o);\n      } catch {\n      }\n    return n || p(r), n.map(t);\n  });\n}\nconst I = i(\"fn\", (t) => {\n  if (typeof t == \"function\")\n    return t;\n  p(t);\n});\nfunction B(t) {\n  return !!t && typeof t == \"object\" && !Array.isArray(t);\n}\nexport {\n  w as ERR_INVALID_VALUE,\n  d as ERR_PARSE,\n  W as ERR_UNEXPECTED_TYPE,\n  D as ERR_UNEXPECTED_VALUE,\n  L as array,\n  E as boolean,\n  i as createTransformerGen,\n  U as date,\n  I as fn,\n  N as initData,\n  O as isRGB,\n  T as isRGBShort,\n  B as isRecord,\n  V as launchParams,\n  j as miniAppsMessage,\n  g as number,\n  m as object,\n  C as rgb,\n  R as searchParams,\n  $ as serializeLaunchParams,\n  y as serializeThemeParams,\n  f as string,\n  b as themeParams,\n  _ as toRGB,\n  P as toRecord\n};\n//# sourceMappingURL=index.js.map\n","import { object, fn } from '@telegram-apps/transformers';\n\ninterface WithWebviewProxy {\n  TelegramWebviewProxy: {\n    postEvent: (...args: unknown[]) => unknown;\n  };\n}\n\nconst webViewProxy = object<WithWebviewProxy>({\n  TelegramWebviewProxy: object({ postEvent: fn() })(),\n});\n\n/**\n * Returns true in case, passed value contains path `TelegramWebviewProxy.postEvent` property and\n * `postEvent` is a function.\n * @param value - value to check.\n */\nexport function hasWebviewProxy<T>(value: T): value is T & WithWebviewProxy {\n  return webViewProxy().isValid(value);\n}\n","/**\n * @see https://stackoverflow.com/a/326076\n * @returns True, if current environment is iframe.\n */\nexport function isIframe(): boolean {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return true;\n  }\n}\n","var k = Object.defineProperty;\nvar I = (r, e, t) => e in r ? k(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t;\nvar E = (r, e, t) => I(r, typeof e != \"symbol\" ? e + \"\" : e, t);\nclass d extends Error {\n  constructor(e, t, n) {\n    super(\n      typeof t == \"object\" ? t.message : t || e,\n      {\n        cause: typeof t == \"object\" ? t.cause : n\n      }\n    ), this.type = e, this.name = \"TypedError\", Object.setPrototypeOf(this, d.prototype);\n  }\n}\nfunction x(r, e, t) {\n  return r.addEventListener(e, t), () => r.removeEventListener(e, t);\n}\nfunction _(...r) {\n  const e = r.flat(1);\n  return [\n    e.push.bind(e),\n    () => {\n      e.forEach((t) => {\n        t();\n      });\n    }\n  ];\n}\nfunction F(r, e) {\n  return r instanceof d && r.type === e;\n}\nfunction m(r) {\n  return (e) => F(e, r);\n}\nconst R = \"ERR_ABORTED\", $ = \"ERR_CANCELED\", S = \"ERR_TIMED_OUT\";\nfunction T(r) {\n  return new d(R, { cause: r });\n}\nconst U = m(S), V = m(R), B = m($);\nfunction C(r, e) {\n  return r.reject = e.reject, r;\n}\nclass i extends Promise {\n  constructor(t, n) {\n    let o, s;\n    typeof t == \"function\" ? (o = t, s = n) : s = t;\n    let u, c;\n    super((a, h) => {\n      s || (s = {});\n      const { abortSignal: l } = s;\n      if (l && l.aborted)\n        return h(T(l.reason));\n      const [y, A] = _(), b = (f) => (...L) => (A(), f(...L)), w = new AbortController(), { signal: D } = w;\n      c = b((f) => {\n        w.abort(f), h(f);\n      }), u = b(a), l && y(\n        x(l, \"abort\", () => {\n          c(T(l.reason));\n        })\n      );\n      const { timeout: g } = s;\n      if (g) {\n        const f = setTimeout(() => {\n          c(new d(S, `Timeout reached: ${g}ms`));\n        }, g);\n        y(() => {\n          clearTimeout(f);\n        });\n      }\n      o && o(u, c, D);\n    });\n    /**\n     * Rejects the promise.\n     */\n    E(this, \"reject\");\n    this.reject = c;\n  }\n  /**\n   * Creates a new BetterPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new i((o, s, u) => {\n      try {\n        const c = t(u);\n        return c instanceof Promise ? c.then(o, s) : o(c);\n      } catch (c) {\n        s(c);\n      }\n    }, n);\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new i((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new i((n, o) => {\n      o(t);\n    });\n  }\n  /**\n   * Cancels the promise execution.\n   */\n  cancel() {\n    this.reject(new d($));\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return C(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return C(super.then(t, n), this);\n  }\n}\nfunction v(r, e) {\n  return r.resolve = e.resolve, r;\n}\nclass p extends i {\n  constructor(t, n) {\n    let o, s;\n    typeof t == \"function\" ? (o = t, s = n) : s = t;\n    let u;\n    super((c, a, h) => {\n      u = c, o && o(c, a, h);\n    }, s);\n    /**\n     * Resolves the promise.\n     */\n    E(this, \"resolve\");\n    this.resolve = u;\n  }\n  /**\n   * Creates a new EnhancedPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new p(\n      (o, s, u) => i.withFn(t, { abortSignal: u }).then(o, s),\n      n\n    );\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new p((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new p((n, o) => {\n      o(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return v(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return v(super.then(t, n), this);\n  }\n}\nfunction Z(r, e) {\n  return new i((t) => {\n    setTimeout(t, r);\n  }, { abortSignal: e });\n}\nfunction j(r) {\n  return `tapps/${r}`;\n}\nfunction J(r, e) {\n  sessionStorage.setItem(j(r), JSON.stringify(e));\n}\nfunction K(r) {\n  const e = sessionStorage.getItem(j(r));\n  try {\n    return e ? JSON.parse(e) : void 0;\n  } catch {\n  }\n}\nfunction M(r) {\n  return r.replace(/[A-Z]/g, (e) => `-${e.toLowerCase()}`);\n}\nfunction z(r) {\n  return r.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);\n}\nfunction G(r) {\n  return r.replace(/_[a-z]/g, (e) => e[1].toUpperCase());\n}\n// @__NO_SIDE_EFFECTS__\nfunction q(r, e) {\n  e || (e = {});\n  const {\n    textColor: t,\n    bgColor: n,\n    shouldLog: o = !0\n  } = e;\n  function s(u, ...c) {\n    if (!o || typeof o == \"function\" && !o())\n      return;\n    const a = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n    console[u](\n      `%c${Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        fractionalSecondDigits: 3,\n        timeZone: \"UTC\"\n      }).format(/* @__PURE__ */ new Date())}%c / %c${r}`,\n      `${a};background-color: lightblue;color:black`,\n      \"\",\n      `${a};${t ? `color:${t};` : \"\"}${n ? `background-color:${n}` : \"\"}`,\n      ...c\n    );\n  }\n  return [\n    function(...c) {\n      s(\"log\", ...c);\n    },\n    function(...c) {\n      s(\"error\", ...c);\n    }\n  ];\n}\nfunction H(r, e) {\n  document.documentElement.style.setProperty(r, e);\n}\nfunction P(r) {\n  document.documentElement.style.removeProperty(r);\n}\nexport {\n  i as CancelablePromise,\n  R as ERR_ABORTED,\n  $ as ERR_CANCELED,\n  S as ERR_TIMED_OUT,\n  p as EnhancedPromise,\n  d as TypedError,\n  x as addEventListener,\n  M as camelToKebab,\n  z as camelToSnake,\n  T as createAbortError,\n  _ as createCbCollector,\n  q as createLogger,\n  m as createTypedErrorPredicate,\n  P as deleteCssVar,\n  K as getStorageValue,\n  V as isAbortError,\n  B as isCanceledError,\n  F as isErrorOfType,\n  U as isTimeoutError,\n  H as setCssVar,\n  J as setStorageValue,\n  Z as sleep,\n  G as snakeToCamel\n};\n//# sourceMappingURL=index.js.map\n","let r;\nfunction y(e, c) {\n  r && r.set(e, c) || c();\n}\nfunction m(e) {\n  if (r)\n    return e();\n  r = /* @__PURE__ */ new Map();\n  try {\n    e();\n  } finally {\n    r.forEach((c) => c()), r = void 0;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nfunction S(e, c) {\n  c || (c = {});\n  const g = c.equals || Object.is;\n  let u = [], s = e;\n  const i = (t) => {\n    if (!g(s, t)) {\n      const l = s;\n      s = t, y(o, () => {\n        [...u].forEach(([f, d]) => {\n          f(t, l), d && n(f, !0);\n        });\n      });\n    }\n  };\n  function a(t) {\n    const l = typeof t != \"object\" ? { once: t } : t;\n    return {\n      once: l.once || !1,\n      signal: l.signal || !1\n    };\n  }\n  const n = (t, l) => {\n    const f = a(l), d = u.findIndex(([h, p]) => h === t && p.once === f.once && p.signal === f.signal);\n    d >= 0 && u.splice(d, 1);\n  }, o = Object.assign(\n    function() {\n      return j(o), s;\n    },\n    {\n      destroy() {\n        u = [];\n      },\n      set: i,\n      reset() {\n        i(e);\n      },\n      sub(t, l) {\n        return u.push([t, a(l)]), () => n(t, l);\n      },\n      unsub: n,\n      unsubAll() {\n        u = u.filter((t) => t[1].signal);\n      }\n    }\n  );\n  return o;\n}\nconst b = [];\nfunction j(e) {\n  b.length && b[b.length - 1].add(e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction x(e, c) {\n  let g = /* @__PURE__ */ new Set(), u;\n  function s() {\n    return u || (u = /* @__PURE__ */ S(a(), c));\n  }\n  function i() {\n    s().set(a());\n  }\n  function a() {\n    g.forEach((t) => {\n      t.unsub(i, { signal: !0 });\n    });\n    const n = /* @__PURE__ */ new Set();\n    let o;\n    b.push(n);\n    try {\n      o = e();\n    } finally {\n      b.pop();\n    }\n    return n.forEach((t) => {\n      t.sub(i, { signal: !0 });\n    }), g = n, o;\n  }\n  return Object.assign(function() {\n    return s()();\n  }, {\n    destroy() {\n      s().destroy();\n    },\n    sub(...n) {\n      return s().sub(...n);\n    },\n    unsub(...n) {\n      s().unsub(...n);\n    },\n    unsubAll(...n) {\n      s().unsubAll(...n);\n    }\n  });\n}\nexport {\n  m as batch,\n  x as computed,\n  S as signal\n};\n//# sourceMappingURL=index.js.map\n","import { signal } from '@telegram-apps/signals';\nimport { createLogger } from '@telegram-apps/toolkit';\n\n/**\n * The package debug mode.\n *\n * Enabling debug mode leads to printing additional messages in the console related to the\n * processes inside the package.\n */\nexport const $debug = signal(false);\n\nexport const [logInfo, logError] = createLogger('Bridge', {\n  bgColor: '#9147ff',\n  textColor: 'white',\n  shouldLog: $debug,\n});\n","import {\n  boolean,\n  createTransformerGen,\n  number,\n  object,\n  string,\n  type TransformerGen,\n} from '@telegram-apps/transformers';\n\nimport type { EventName, EventPayload } from '@/events/types/events.js';\n\n/**\n * Transformers for problematic Mini Apps events.\n */\nexport const transformers: { [E in EventName]?: TransformerGen<EventPayload<E>> } = {\n  clipboard_text_received: object({\n    req_id: string(),\n    data: (value) => (value === null ? value : string(true)(value)),\n  }, 'clipboard_text_received'),\n  custom_method_invoked: object({\n    req_id: string(),\n    result: (value) => value,\n    error: string(true),\n  }, 'custom_method_invoked'),\n  popup_closed: createTransformerGen('popup_closed', value => {\n    return value\n      ? object({\n        button_id: (value) => (\n          value === null || value === undefined ? undefined : string()(value)\n        ),\n      })()(value)\n      : {};\n  }),\n  viewport_changed: object({\n    height: number(),\n    width: (value) => (\n      value === null || value === undefined\n        ? window.innerWidth\n        : number()(value)\n    ),\n    is_state_stable: boolean(),\n    is_expanded: boolean(),\n  }, 'viewport_changed'),\n};","import { createCbCollector, addEventListener, type If, type IsNever } from '@telegram-apps/toolkit';\nimport { Signal, signal } from '@telegram-apps/signals';\nimport { miniAppsMessage, type MiniAppsMessage } from '@telegram-apps/transformers';\n\nimport { logError, logInfo } from '@/debug.js';\n\nimport { transformers } from '../transformers.js';\nimport type { EventPayload, EventName } from '../types/events.js';\n\nexport type LastEvent = {\n  [E in EventName]: [E, If<IsNever<EventPayload<E>>, undefined, EventPayload<E>>]\n}[EventName];\n\n/**\n * Creates window event listeners, tracking Mini Apps events and calling passed handler with their\n * data.\n * @param onEvent - event callback.\n */\nfunction defineListeners(onEvent: (event: LastEvent) => void): () => void {\n  const w = window;\n  const [, cleanup] = createCbCollector(\n    // Add listener, which handles events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    addEventListener(w, 'message', (event) => {\n      // Ignore non-parent window messages.\n      if (event.source !== w.parent) {\n        return;\n      }\n\n      // Parse incoming event data.\n      let message: MiniAppsMessage;\n      try {\n        message = miniAppsMessage()(event.data);\n      } catch {\n        // We ignore incorrect messages as they could be generated by any other code.\n        return;\n      }\n\n      const { eventType, eventData } = message;\n      const createTransformer = transformers[eventType as keyof typeof transformers];\n\n      try {\n        const transformed = createTransformer\n          ? createTransformer()(eventData)\n          : eventData;\n        logInfo('Event received:', transformed\n          ? { eventType, eventData: transformed }\n          : { eventType });\n        onEvent([eventType, transformed] as LastEvent);\n      } catch (cause) {\n        logError(\n          [\n            `An error occurred processing the \"${eventType}\" event from the Telegram application.`,\n            'Please, file an issue here:',\n            'https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose',\n          ].join('\\n'),\n          message,\n          cause,\n        );\n      }\n    }),\n  );\n\n  return cleanup;\n}\n\n/**\n * Last received event.\n */\nexport const $lastEvent = signal<LastEvent>();\n\n/**\n * Side effects listening cleanup function. It will be eventually set when some code tried\n * to retrieve the last event.\n */\nexport const $lastEventCleanup = signal<() => void>();\n\n/**\n * Retrieve last received Mini Apps event ensuring that external listeners were defined.\n */\nexport function lastEventSignal(): Signal<LastEvent | undefined> {\n  if (!$lastEventCleanup()) {\n    $lastEventCleanup.set(defineListeners($lastEvent.set));\n  }\n  return $lastEvent;\n}\n\n","import { type Signal, signal } from '@telegram-apps/signals';\n\nimport { lastEventSignal } from '@/events/listening/lastEvent.js';\nimport type { EventName } from '@/events/types/events.js';\nimport type { SignalPayload } from '@/events/listening/types.js';\n\ntype CachedSignal<E extends EventName> = Signal<SignalPayload<E>>;\ntype Cache = {\n  [E in EventName]?: CachedSignal<E>\n};\n\nexport const $eventSignalsCache = signal<Cache>({});\n\n/**\n * Returns a signal for specified event using cache.\n * @param event - event name.\n */\nexport function signalFor<E extends EventName>(event: E): CachedSignal<E> {\n  let cached = $eventSignalsCache()[event];\n  if (!cached) {\n    // This is the special symbol we use to notify signal, that nothing changed, and the current\n    // value should be preserved.\n    cached = signal(undefined, {\n      equals() {\n        // We may receive several undefined in a row. For example,\n        // in the main_button_pressed event.\n        return false;\n      },\n    }) as Cache[E];\n    lastEventSignal().sub(ev => {\n      if (ev && ev[0] === event) {\n        cached!.set(ev[1] as SignalPayload<E>);\n      }\n    });\n\n    $eventSignalsCache.set({ ...$eventSignalsCache(), [event]: cached });\n  }\n\n  return cached as CachedSignal<E>;\n}","import type { RemoveListenerFn } from '@telegram-apps/signals';\n\nimport { signalFor } from '@/events/listening/signalFor.js';\nimport type { EventName } from '@/events/types/events.js';\nimport type { EventListener } from '@/events/listening/types.js';\n\n/**\n * Adds a new listener to the specified event.\n * @param event - event name.\n * @param listener - event listener.\n * @param once - should listener be called only once.\n * @returns Function to remove bound event listener.\n */\nexport function on<E extends EventName>(\n  event: E,\n  listener: EventListener<E>,\n  once?: boolean,\n): RemoveListenerFn {\n  return signalFor(event).sub(listener, once);\n}","export const ERR_METHOD_UNSUPPORTED = 'ERR_METHOD_UNSUPPORTED';\nexport const ERR_RETRIEVE_LP_FAILED = 'ERR_RETRIEVE_LP_FAILED';\nexport const ERR_METHOD_PARAMETER_UNSUPPORTED = 'ERR_METHOD_PARAMETER_UNSUPPORTED';\nexport const ERR_UNKNOWN_ENV = 'ERR_UNKNOWN_ENV';\nexport const ERR_CUSTOM_METHOD_ERR_RESPONSE = 'ERR_INVOKE_CUSTOM_METHOD_RESPONSE';\n","import { signal } from '@telegram-apps/signals';\n\n/**\n * Target origin used by the `postEvent` method.\n *\n * You don't need to override this value until you know what you are doing.\n * @default 'https://web.telegram.org'\n */\nexport const $targetOrigin = signal('https://web.telegram.org');\n","import { fn, object } from '@telegram-apps/transformers';\nimport { TypedError } from '@telegram-apps/toolkit';\n\nimport { logInfo } from '@/debug.js';\nimport { isIframe } from '@/env/isIframe.js';\nimport { hasWebviewProxy } from '@/env/hasWebviewProxy.js';\nimport { ERR_UNKNOWN_ENV } from '@/errors.js';\nimport { $targetOrigin } from '@/methods/$targetOrigin.js';\nimport type {\n  MethodName,\n  MethodNameWithOptionalParams,\n  MethodNameWithoutParams,\n  MethodNameWithRequiredParams,\n  MethodParams,\n} from '@/methods/types/index.js';\n\nexport type PostEventFn = typeof postEvent;\n\n/**\n * Calls Mini Apps methods requiring parameters.\n * @param method - method name.\n * @param params - options along with params.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n */\nexport function postEvent<Method extends MethodNameWithRequiredParams>(\n  method: Method,\n  params: MethodParams<Method>,\n): void;\n\n/**\n * Calls Mini Apps methods accepting no parameters at all.\n * @param method - method name.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n */\nexport function postEvent(method: MethodNameWithoutParams): void;\n\n/**\n * Calls Mini Apps methods accepting optional parameters.\n * @param method - method name.\n * @param params - options along with params.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n */\nexport function postEvent<Method extends MethodNameWithOptionalParams>(\n  method: Method,\n  params?: MethodParams<Method>,\n): void;\n\nexport function postEvent(\n  eventType: MethodName,\n  eventData?: MethodParams<MethodName>,\n): void {\n  logInfo('Posting event:', eventData ? { eventType, eventData } : { eventType });\n\n  const w = window;\n\n  // Telegram for iOS and macOS.\n  if (hasWebviewProxy(w)) {\n    w.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n    return;\n  }\n\n  const message = JSON.stringify({ eventType, eventData });\n\n  // Telegram Web.\n  if (isIframe()) {\n    return w.parent.postMessage(message, $targetOrigin());\n  }\n\n  // Telegram for Windows Phone or Android.\n  const { external } = w;\n  if (object({ notify: fn() })().isValid(external)) {\n    external.notify(message);\n    return;\n  }\n\n  // Otherwise current environment is unknown, and we are not able to send event.\n  throw new TypedError(ERR_UNKNOWN_ENV);\n}\n","import {\n  CancelablePromise,\n  createCbCollector,\n  type If,\n  type IsNever,\n} from '@telegram-apps/toolkit';\n\nimport { on } from '@/events/listening/on.js';\nimport { postEvent } from '@/methods/postEvent.js';\nimport type {\n  MethodName,\n  MethodNameWithOptionalParams,\n  MethodNameWithoutParams,\n  MethodNameWithRequiredParams,\n  MethodParams,\n} from '@/methods/types/index.js';\nimport type { EventName, EventPayload } from '@/events/types/events.js';\nimport type { ExecuteWithOptions } from '@/types.js';\n\ntype AnyEventName = EventName | EventName[];\n\nexport type RequestCaptureFnEventsPayload<E extends EventName[]> = E extends (infer U extends EventName)[]\n  ? {\n    [K in U]: If<\n      IsNever<EventPayload<K>>,\n      { event: K },\n      { event: K; payload: EventPayload<K> }\n    >\n  }[U]\n  : never;\n\nexport type RequestCaptureEventsFn<E extends EventName[]> = (\n  payload: RequestCaptureFnEventsPayload<E>,\n) => boolean\n\nexport type RequestCaptureEventFn<E extends EventName> = If<\n  IsNever<EventPayload<E>>,\n  () => boolean,\n  (payload: EventPayload<E>) => boolean\n>;\n\nexport type RequestCaptureFn<E extends AnyEventName> = E extends EventName[]\n  ? RequestCaptureEventsFn<E>\n  : E extends EventName\n    ? RequestCaptureEventFn<E>\n    : never;\n\nexport interface RequestBasicOptions<E extends AnyEventName> extends ExecuteWithOptions {\n  /**\n   * Should return true if this event should be captured.\n   * The first compatible request will be captured if this property is omitted.\n   */\n  capture?: RequestCaptureFn<E>;\n}\n\nexport type RequestResult<E extends AnyEventName> =\n  E extends (infer U extends EventName)[]\n    ? U extends infer K extends EventName\n      ? If<IsNever<EventPayload<K>>, undefined, EventPayload<K>>\n      : never\n    : E extends EventName\n      ? If<IsNever<EventPayload<E>>, undefined, EventPayload<E>>\n      : never;\n\nexport type RequestFn = typeof request;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods, requiring parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithRequiredParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options: RequestBasicOptions<E> & { params: MethodParams<M> },\n): CancelablePromise<RequestResult<E>>;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods with optional parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithOptionalParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestBasicOptions<E> & { params?: MethodParams<M> },\n): CancelablePromise<RequestResult<E>>;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods without parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithoutParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestBasicOptions<E>,\n): CancelablePromise<RequestResult<E>>;\n\nexport function request<M extends MethodName, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestBasicOptions<E> & { params?: MethodParams<M> },\n): CancelablePromise<RequestResult<E>> {\n  options ||= {};\n  const { capture } = options;\n  const [addCleanup, cleanup] = createCbCollector();\n\n  return new CancelablePromise<RequestResult<E>>((resolve) => {\n    // We need to iterate over all tracked events and create their event listeners.\n    ((Array.isArray(eventOrEvents) ? eventOrEvents : [eventOrEvents])).forEach(event => {\n      // Each event listener waits for the event to occur.\n      // Then, if the capture function was passed, we should check if the event should be captured.\n      // If the function is omitted, we instantly capture the event.\n      addCleanup(\n        on(event, payload => {\n          if (!capture || (\n            Array.isArray(eventOrEvents)\n              ? (capture as RequestCaptureEventsFn<EventName[]>)({\n                event,\n                payload,\n              } as RequestCaptureFnEventsPayload<EventName[]>)\n              : (capture as RequestCaptureEventFn<EventName>)(payload)\n          )) {\n            resolve(payload as RequestResult<E>);\n          }\n        }),\n      );\n    });\n\n    (options.postEvent || postEvent)(method as any, (options as any).params);\n  }, options)\n    .finally(cleanup);\n}\n","import { launchParams, type LaunchParams } from '@telegram-apps/transformers';\n\n/**\n * Parses value as launch parameters.\n * @param value - value to parse.\n */\nexport function parseLaunchParams(value: unknown): LaunchParams {\n  return launchParams()(value);\n}\n","import type { LaunchParams } from '@telegram-apps/types';\n\nimport { parseLaunchParams } from './parseLaunchParams.js';\n\n/**\n * @param urlString - URL to extract launch parameters from.\n * @returns Launch parameters from the specified URL.\n * @throws Error if function was unable to extract launch parameters from the passed URL.\n */\nexport function retrieveFromUrl(urlString: string): LaunchParams {\n  return parseLaunchParams(\n    urlString\n      // Replace everything before this first hashtag or question sign.\n      .replace(/^[^?#]*[?#]/, '')\n      // Replace all hashtags and question signs to make it look like some search params.\n      .replace(/[?#]/g, '&'),\n  );\n}\n","import type { LaunchParams } from '@telegram-apps/types';\n\nimport { retrieveFromUrl } from './retrieveFromUrl.js';\n\n/**\n * @returns Launch parameters from the current window location hash.\n * @throws Error if function was unable to extract launch parameters from the window location hash.\n */\nexport function retrieveFromLocation(): LaunchParams {\n  return retrieveFromUrl(window.location.href);\n}\n","import type { LaunchParams } from '@telegram-apps/types';\n\nimport { retrieveFromUrl } from './retrieveFromUrl.js';\n\n/**\n * @returns Launch parameters based on the first navigation entry.\n * @throws Error if function was unable to extract launch parameters from the navigation entry.\n */\nexport function retrieveFromPerformance(): LaunchParams {\n  const navigationEntry = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming | undefined;\n  if (!navigationEntry) {\n    throw new Error('Unable to get first navigation entry.');\n  }\n\n  return retrieveFromUrl(navigationEntry.name);\n}\n","import { getStorageValue, setStorageValue } from '@telegram-apps/toolkit';\nimport { serializeLaunchParams } from '@telegram-apps/transformers';\nimport type { LaunchParams } from '@telegram-apps/types';\n\nimport { parseLaunchParams } from './parseLaunchParams.js';\n\nconst STORAGE_KEY = 'launchParams';\n\n/**\n * @returns Launch parameters stored in the session storage.\n * @throws Error if function was unable to extract launch parameters from the window location hash.\n */\nexport function retrieveFromStorage(): LaunchParams {\n  return parseLaunchParams(getStorageValue(STORAGE_KEY) || '');\n}\n\n/**\n * Saves specified launch parameters in the session storage.\n * @param value - launch params to save.\n */\nexport function saveToStorage(value: LaunchParams): void {\n  setStorageValue('launchParams', serializeLaunchParams(value));\n}\n","import type { LaunchParams } from '@telegram-apps/types';\nimport { TypedError } from '@telegram-apps/toolkit';\n\nimport { ERR_RETRIEVE_LP_FAILED } from '@/errors.js';\n\nimport { retrieveFromLocation } from './retrieveFromLocation.js';\nimport { retrieveFromPerformance } from './retrieveFromPerformance.js';\nimport { retrieveFromStorage, saveToStorage } from './storage.js';\n\nfunction unwrapError(e: unknown): string {\n  if (e instanceof Error) {\n    return e.message + (e.cause ? `\\n  ${unwrapError(e.cause)}` : '');\n  }\n  return JSON.stringify(e);\n}\n\n/**\n * @returns Launch parameters from any known source.\n * @throws {TypedError} ERR_RETRIEVE_LP_FAILED\n */\nexport function retrieveLaunchParams(): LaunchParams {\n  const errors: unknown[] = [];\n\n  for (const retrieve of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    retrieveFromLocation,\n    // Then, try using the lower level API - window.performance.\n    retrieveFromPerformance,\n    // Finally, try to extract launch parameters from the session storage.\n    retrieveFromStorage,\n  ]) {\n    try {\n      const lp = retrieve();\n      saveToStorage(lp);\n      return lp;\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n\n  throw new TypedError(ERR_RETRIEVE_LP_FAILED, [\n    'Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?',\n    '📖 Refer to docs for more information:',\n    'https://docs.telegram-mini-apps.com/packages/telegram-apps-bridge/environment',\n    'Collected errors:',\n    ...errors.map(e => `— ${unwrapError(e)}`),\n  ].join('\\n'));\n}\n","import { CancelablePromise, type AsyncOptions } from '@telegram-apps/toolkit';\n\nimport { request } from '@/utils/request.js';\nimport { hasWebviewProxy } from '@/env/hasWebviewProxy.js';\nimport { retrieveLaunchParams } from '@/launch-params/retrieveLaunchParams.js';\n\n/**\n * Returns true if the current environment is Telegram Mini Apps.\n *\n * It uses the `retrieveLaunchParams` function to determine if the environment contains\n * launch parameters. In case it does, true will be returned.\n *\n * In case you need stricter checks, use async override of this function.\n */\nexport function isTMA(type: 'simple'): boolean;\n\n/**\n * Returns promise with true if the current environment is Telegram Mini Apps.\n *\n * First of all, it checks if the current environment contains traits specific to the\n * Mini Apps environment.\n * Then, it attempts to call a Mini Apps method and waits for a response to be received.\n *\n * In case you need less strict checks, use sync override of this function.\n */\nexport function isTMA(options?: AsyncOptions): CancelablePromise<boolean>\n\nexport function isTMA(optionsOrType?: AsyncOptions | 'simple'): boolean | CancelablePromise<boolean> {\n  if (optionsOrType === 'simple') {\n    try {\n      retrieveLaunchParams();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  return CancelablePromise.withFn(async () => {\n    if (hasWebviewProxy(window)) {\n      return true;\n    }\n    try {\n      await request('web_app_request_theme', 'theme_changed', { timeout: 100 });\n      return true;\n    } catch {\n      return false;\n    }\n  }, optionsOrType);\n}\n","/**\n * Emits an event sent from the Telegram native application like it was sent in a default web\n * environment between two iframes.\n *\n * It dispatches a new MessageEvent and expects it to be handled via\n * the `window.addEventListener('message', ...)` call, as a developer would do it to handle\n * messages sent from the parent iframe.\n * @param eventType - event name.\n * @param eventData - event payload.\n */\nexport function emitMiniAppsEvent(eventType: string, eventData?: unknown): void {\n  window.dispatchEvent(new MessageEvent('message', {\n    data: JSON.stringify({ eventType, eventData }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent,\n  }));\n}","import {\n  miniAppsMessage,\n  serializeThemeParams,\n  type ThemeParams,\n} from '@telegram-apps/transformers';\nimport type { LaunchParams } from '@telegram-apps/types';\n\nimport { parseLaunchParams } from '@/launch-params/parseLaunchParams.js';\nimport { saveToStorage } from '@/launch-params/storage.js';\nimport { logInfo } from '@/debug.js';\nimport { emitMiniAppsEvent } from '@/events/emitMiniAppsEvent.js';\nimport type { EventPayload } from '@/events/types/index.js';\n\n/**\n * Intercepts the window.parent.postMessage call and performs pre-defined actions. For example,\n * it may handle the request theme request and emit the theme_changed event.\n * @param tp - theme params.\n * @param data - postMessage data.\n */\nfunction imitatePostEvent(tp: ThemeParams, data: unknown): void {\n  if (typeof data !== 'string') {\n    return;\n  }\n  try {\n    const { eventType } = miniAppsMessage()(data);\n\n    if (eventType === 'web_app_request_theme') {\n      emitMiniAppsEvent('theme_changed', {\n        theme_params: JSON.parse(serializeThemeParams(tp)),\n      } satisfies EventPayload<'theme_changed'>);\n    }\n\n    if (eventType === 'web_app_request_viewport') {\n      emitMiniAppsEvent('viewport_changed', {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: true,\n        is_expanded: true,\n      } satisfies EventPayload<'viewport_changed'>);\n    }\n  } catch {\n  }\n}\n\n/**\n * Mocks a Telegram application environment.\n * @param launchParamsRaw - launch parameters presented as a string or query parameters.\n */\nexport function mockTelegramEnv(launchParamsRaw: LaunchParams | string): void {\n  const lp = typeof launchParamsRaw === 'string'\n    ? parseLaunchParams(launchParamsRaw)\n    : launchParamsRaw;\n\n  // Save launch params in the storage, so retrieveLaunchParams will return them.\n  saveToStorage(lp);\n\n  // Define a special port, expected by the postEvent function.\n  const proxyPostEvent = (window as any).TelegramWebviewProxy?.postEvent;\n  (window as any).TelegramWebviewProxy = {\n    postEvent(eventType: string, eventData: string) {\n      imitatePostEvent(lp.themeParams, JSON.stringify({ eventType, eventData }));\n      proxyPostEvent?.(eventType, eventData);\n    },\n  };\n\n  logInfo('Environment was mocked by the mockTelegramEnv function');\n}","import { emitMiniAppsEvent } from '@/events/emitMiniAppsEvent.js';\n\n/**\n * Defines special handlers by known paths, which Telegram recognizes as ports to receive events.\n */\nexport function defineEventHandlers() {\n  // Iterate over each path, where \"receiveEvent\" function should be\n  // defined. This function is called by external environment in case,\n  // it wants to emit some event.\n  [\n    ['TelegramGameProxy_receiveEvent'], // Windows Phone.\n    ['TelegramGameProxy', 'receiveEvent'], // Desktop.\n    ['Telegram', 'WebView', 'receiveEvent'], // Android and iOS.\n  ].forEach((path) => {\n    // Path starts from the \"window\" object.\n    let pointer = window as Record<string, any>;\n\n    path.forEach((item, idx, arr) => {\n      // We are on the last iteration, where function property name is passed.\n      if (idx === arr.length - 1) {\n        pointer[item] = emitMiniAppsEvent;\n        return;\n      }\n\n      if (!(item in pointer)) {\n        pointer[item] = {};\n      }\n      pointer = pointer[item];\n    });\n  });\n}\n","/**\n * Removes global event handlers, used by the package.\n */\nexport function removeEventHandlers(): void {\n  ['TelegramGameProxy_receiveEvent', 'TelegramGameProxy', 'Telegram'].forEach((prop) => {\n    delete window[prop as keyof Window];\n  });\n}","import { signalFor } from '@/events/listening/signalFor.js';\nimport type { EventName } from '@/events/types/events.js';\nimport type { EventListener } from '@/events/listening/types.js';\n\n/**\n * Removes the listener from the specified event.\n * @param event - event to listen.\n * @param listener - event listener to remove.\n * @param once - had this listener to be called only once.\n */\nexport function off<E extends EventName>(\n  event: E,\n  listener: EventListener<E>,\n  once?: boolean,\n): void {\n  signalFor(event).unsub(listener, once);\n}\n","import type { RemoveListenerFn } from '@telegram-apps/signals';\n\nimport { lastEventSignal } from '@/events/listening/lastEvent.js';\nimport type { SubscribeListener } from '@/events/listening/types.js';\n\n/**\n * Subscribes to all events sent from the native Telegram application.\n * @param listener - event listener to bind.\n * @param once - should this listener be called only once.\n * @returns Function to remove bound event listener.\n */\nexport function subscribe(listener: SubscribeListener, once?: boolean): RemoveListenerFn {\n  return lastEventSignal().sub(listener, once);\n}\n","import type { SubscribeListenerFn } from '@telegram-apps/signals';\n\nimport { $lastEvent, LastEvent } from '@/events/listening/lastEvent.js';\n\n/**\n * Remove a subscriber listening to all events sent from the native Telegram application.\n * @param listener - event listener to remove.\n * @param once - had this listener to be called only once.\n * @returns Function to remove bound event listener.\n */\nexport function unsubscribe(\n  listener: SubscribeListenerFn<LastEvent | undefined>,\n  once?: boolean,\n): void {\n  $lastEvent.unsub(listener, once);\n}\n","type CaptureSameReqFn = (payload: { req_id: string }) => boolean;\n\n/**\n * Returns a function which can be used in `request` function `capture` property to capture\n * the event with the same request identifier.\n * @param reqId - request identifier.\n */\nexport function captureSameReq(reqId: string): CaptureSameReqFn {\n  return ({ req_id }) => req_id === reqId;\n}\n","import type { Version } from '@telegram-apps/types';\n\nfunction parts(a: Version): number[] {\n  return a.split('.').map(Number);\n}\n\n/**\n * @param a - first version.\n * @param b - second version.\n * @returns\n * - `1` if the version \"a\" is greater than \"b\".\n * - `0` the version \"a\" is equal to \"b\".\n * - `-1` the version \"a\" is lower than \"b\".\n */\nexport function compareVersions(a: Version, b: Version): number {\n  const aParts = parts(a);\n  const bParts = parts(b);\n  const len = Math.max(aParts.length, bParts.length);\n\n  // Iterate over each part of versions and compare them. In case, part is\n  // missing, assume its value is equal to 0.\n  for (let i = 0; i < len; i += 1) {\n    const aVal = aParts[i] || 0\n    const bVal = bParts[i] || 0;\n\n    if (aVal === bVal) {\n      continue;\n    }\n    return aVal > bVal ? 1 : -1;\n  }\n  return 0;\n}\n","import type { Version } from '@telegram-apps/types';\n\nimport { compareVersions } from '@/utils/compareVersions.js';\nimport type {\n  MethodName,\n  MethodNameWithVersionedParams,\n  MethodVersionedParams,\n} from '@/methods/types/index.js';\n\n/**\n * Returns true if \"a\" version is less than or equal to \"b\" version.\n * @param a\n * @param b\n */\nfunction versionLessOrEqual(a: Version, b: Version): boolean {\n  return compareVersions(a, b) <= 0;\n}\n\n/**\n * Returns true in case, passed parameter in specified method is supported.\n * @param method - method name\n * @param param - method parameter\n * @param inVersion - platform version.\n */\nexport function supports<M extends MethodNameWithVersionedParams>(\n  method: M,\n  param: MethodVersionedParams<M>,\n  inVersion: Version,\n): boolean;\n\n/**\n * Returns true in case, specified method is supported in a passed version.\n * @param method - method name.\n * @param inVersion - platform version.\n */\nexport function supports(method: MethodName, inVersion: Version): boolean;\n\nexport function supports(\n  method: MethodName,\n  paramOrVersion: Version | string,\n  inVersion?: string,\n): boolean {\n  // Method name, parameter, target version.\n  if (typeof inVersion === 'string') {\n    if (method === 'web_app_open_link') {\n      if (paramOrVersion === 'try_instant_view') {\n        return versionLessOrEqual('6.4', inVersion);\n      }\n      if (paramOrVersion === 'try_browser') {\n        return versionLessOrEqual('7.6', inVersion);\n      }\n    }\n\n    if (method === 'web_app_set_header_color') {\n      if (paramOrVersion === 'color') {\n        return versionLessOrEqual('6.9', inVersion);\n      }\n    }\n\n    if (method === 'web_app_close' && paramOrVersion === 'return_back') {\n      return versionLessOrEqual('7.6', inVersion);\n    }\n\n    if (method === 'web_app_setup_main_button' && paramOrVersion === 'has_shine_effect') {\n      return versionLessOrEqual('7.10', inVersion);\n    }\n  }\n\n  switch (method) {\n    case 'web_app_open_tg_link':\n    case 'web_app_open_invoice':\n    case 'web_app_setup_back_button':\n    case 'web_app_set_background_color':\n    case 'web_app_set_header_color':\n    case 'web_app_trigger_haptic_feedback':\n      return versionLessOrEqual('6.1', paramOrVersion);\n    case 'web_app_open_popup':\n      return versionLessOrEqual('6.2', paramOrVersion);\n    case 'web_app_close_scan_qr_popup':\n    case 'web_app_open_scan_qr_popup':\n    case 'web_app_read_text_from_clipboard':\n      return versionLessOrEqual('6.4', paramOrVersion);\n    case 'web_app_switch_inline_query':\n      return versionLessOrEqual('6.7', paramOrVersion);\n    case 'web_app_invoke_custom_method':\n    case 'web_app_request_write_access':\n    case 'web_app_request_phone':\n      return versionLessOrEqual('6.9', paramOrVersion);\n    case 'web_app_setup_settings_button':\n      return versionLessOrEqual('6.10', paramOrVersion);\n    case 'web_app_biometry_get_info':\n    case 'web_app_biometry_open_settings':\n    case 'web_app_biometry_request_access':\n    case 'web_app_biometry_request_auth':\n    case 'web_app_biometry_update_token':\n      return versionLessOrEqual('7.2', paramOrVersion);\n    case 'web_app_setup_swipe_behavior':\n      return versionLessOrEqual('7.7', paramOrVersion);\n    case 'web_app_share_to_story':\n      return versionLessOrEqual('7.8', paramOrVersion);\n    case 'web_app_setup_secondary_button':\n    case 'web_app_set_bottom_bar_color':\n      return versionLessOrEqual('7.10', paramOrVersion);\n    case 'web_app_request_safe_area':\n    case 'web_app_request_content_safe_area':\n    case 'web_app_request_fullscreen':\n    case 'web_app_exit_fullscreen':\n    case 'web_app_set_emoji_status':\n    case 'web_app_add_to_home_screen':\n    case 'web_app_check_home_screen':\n    case 'web_app_request_emoji_status_access':\n      return versionLessOrEqual('8.0', paramOrVersion);\n    default:\n      return [\n        'iframe_ready',\n        'iframe_will_reload',\n        'web_app_close',\n        'web_app_data_send',\n        'web_app_expand',\n        'web_app_open_link',\n        'web_app_ready',\n        'web_app_request_theme',\n        'web_app_request_viewport',\n        'web_app_setup_main_button',\n        'web_app_setup_closing_behavior',\n      ].includes(method);\n  }\n}\n","import { isRecord } from '@telegram-apps/transformers';\nimport { TypedError } from '@telegram-apps/toolkit';\nimport type { Version } from '@telegram-apps/types';\n\nimport { ERR_METHOD_PARAMETER_UNSUPPORTED, ERR_METHOD_UNSUPPORTED } from '@/errors.js';\nimport { supports } from '@/methods/supports.js';\nimport { type PostEventFn, postEvent } from '@/methods/postEvent.js';\nimport type {\n  MethodName,\n  MethodNameWithVersionedParams,\n  MethodVersionedParams,\n} from '@/methods/types/index.js';\n\nexport type OnUnsupportedFn = (\n  data: { version: Version } & (\n    | { method: MethodName }\n    | {\n    [M in MethodNameWithVersionedParams]: {\n      method: M;\n      param: MethodVersionedParams<M>;\n    };\n  }[MethodNameWithVersionedParams]),\n) => void;\n\nexport type CreatePostEventMode = 'strict' | 'non-strict';\n\n/**\n * Creates a function which checks if specified method and parameters are supported.\n *\n * If method or parameters are unsupported, the `onUnsupported` function will be called.\n *\n * If `strict` or `non-strict` value was passed as the second argument, the function\n * will create its own `onUnsupported` function with behavior depending on the value passed.\n *\n * - Passing `strict` will make function to throw a `TypedError` error\n * with `ERR_METHOD_UNSUPPORTED` or `ERR_METHOD_PARAMETER_UNSUPPORTED` type.\n * - Passing `non-strict` will just warn you about something being unsupported.\n *\n * @param version - Telegram Mini Apps version.\n * @param onUnsupportedOrMode - function or strict mode. Default: `strict`\n */\nexport function createPostEvent(\n  version: Version,\n  onUnsupportedOrMode?: OnUnsupportedFn | CreatePostEventMode,\n): PostEventFn {\n  onUnsupportedOrMode ||= 'strict';\n  const onUnsupported: OnUnsupportedFn = typeof onUnsupportedOrMode === 'function'\n    ? onUnsupportedOrMode\n    : data => {\n      const { method, version } = data;\n      let message: string;\n      let error: string;\n\n      if ('param' in data) {\n        message = `Parameter \"${data.param}\" of \"${method}\" method is unsupported in Mini Apps version ${version}`;\n        error = ERR_METHOD_PARAMETER_UNSUPPORTED;\n      } else {\n        message = `Method \"${method}\" is unsupported in Mini Apps version ${version}`;\n        error = ERR_METHOD_UNSUPPORTED;\n      }\n\n      if (onUnsupportedOrMode === 'strict') {\n        throw new TypedError(error, message);\n      }\n      return console.warn(message);\n    };\n\n  return ((method: any, params: any) => {\n    // Firstly, check if a method is supported.\n    if (!supports(method, version)) {\n      return onUnsupported({ version, method });\n    }\n\n    // Method could use parameters, which are supported only in specific versions of Mini Apps.\n    // We are validating only those parameters, which are not backward compatible.\n    if (\n      isRecord(params)\n      && method === 'web_app_set_header_color'\n      && 'color' in params\n      && !supports(method, 'color', version)\n    ) {\n      return onUnsupported({ version, method, param: 'color' });\n    }\n\n    return postEvent(method, params);\n  }) as PostEventFn;\n}\n","import { CancelablePromise, TypedError } from '@telegram-apps/toolkit';\n\nimport { ERR_CUSTOM_METHOD_ERR_RESPONSE } from '@/errors.js';\nimport { captureSameReq } from '@/methods/captureSameReq.js';\nimport type { ExecuteWithOptions } from '@/types.js';\nimport type { CustomMethodName, CustomMethodParams } from '@/methods/types/index.js';\n\nimport { request } from './request.js';\n\n/**\n * Invokes known custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param requestId - request identifier.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod<M extends CustomMethodName>(\n  method: M,\n  params: CustomMethodParams<M>,\n  requestId: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\n/**\n * Invokes unknown custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param requestId - request identifier.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  requestId: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  requestId: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown> {\n  return request('web_app_invoke_custom_method', 'custom_method_invoked', {\n    ...options || {},\n    params: { method, params, req_id: requestId },\n    capture: captureSameReq(requestId),\n  })\n    .then(({ result, error }) => {\n      if (error) {\n        throw new TypedError(ERR_CUSTOM_METHOD_ERR_RESPONSE, error);\n      }\n      return result;\n    });\n}\n","import type { Signal } from '@telegram-apps/signals';\n\nimport { $eventSignalsCache } from '@/events/listening/signalFor.js';\nimport { $lastEvent, $lastEventCleanup } from '@/events/listening/lastEvent.js';\nimport { $targetOrigin } from '@/methods/$targetOrigin.js';\nimport { $debug } from '@/debug.js';\n\nfunction resetSignal(s: Signal<any>): void {\n  s.unsubAll();\n  s.reset();\n}\n\n/**\n * Resets the package state. Normally, you don't use this function in your application.\n * We are using it only for test purposes.\n */\nexport function resetPackageState() {\n  $lastEventCleanup()?.();\n\n  [\n    ...Object.values($eventSignalsCache()),\n    $eventSignalsCache,\n    $lastEvent,\n    $lastEventCleanup,\n    $targetOrigin,\n    $debug,\n  ].forEach(resetSignal);\n}"],"names":["u","e","h","t","S","w","D","W","d","A","a","c","s","P","i","m","p","E","f","g","U","R","l","N","O","T","_","C","b","y","V","$","j","I","B","webViewProxy","object","fn","hasWebviewProxy","value","isIframe","k","r","x","F","n","o","L","v","Z","J","K","M","z","G","q","H","$debug","signal","logInfo","logError","createLogger","transformers","string","createTransformerGen","number","boolean","defineListeners","onEvent","cleanup","createCbCollector","addEventListener","event","message","miniAppsMessage","eventType","eventData","createTransformer","transformed","cause","$lastEvent","$lastEventCleanup","lastEventSignal","$eventSignalsCache","signalFor","cached","ev","on","listener","once","ERR_METHOD_UNSUPPORTED","ERR_RETRIEVE_LP_FAILED","ERR_METHOD_PARAMETER_UNSUPPORTED","ERR_UNKNOWN_ENV","ERR_CUSTOM_METHOD_ERR_RESPONSE","$targetOrigin","postEvent","external","TypedError","request","method","eventOrEvents","options","capture","addCleanup","CancelablePromise","resolve","payload","parseLaunchParams","launchParams","retrieveFromUrl","urlString","retrieveFromLocation","retrieveFromPerformance","navigationEntry","STORAGE_KEY","retrieveFromStorage","getStorageValue","saveToStorage","setStorageValue","serializeLaunchParams","unwrapError","retrieveLaunchParams","errors","retrieve","lp","isTMA","optionsOrType","emitMiniAppsEvent","imitatePostEvent","tp","data","serializeThemeParams","mockTelegramEnv","launchParamsRaw","_a","proxyPostEvent","defineEventHandlers","path","pointer","item","idx","arr","removeEventHandlers","prop","off","subscribe","unsubscribe","captureSameReq","reqId","req_id","parts","compareVersions","aParts","bParts","len","aVal","bVal","versionLessOrEqual","supports","paramOrVersion","inVersion","createPostEvent","version","onUnsupportedOrMode","onUnsupported","error","params","isRecord","invokeCustomMethod","requestId","result","resetSignal","resetPackageState"],"mappings":"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"}