import { AccountAddressInput, InputGenerateTransactionOptions, InputTransactionPluginData } from "@aptos-labs/ts-sdk";
import { InputGenerateTransactionPayloadData } from "@aptos-labs/ts-sdk";
import { WalletReadyState } from "../constants";
export interface AptosStandardSupportedWallet {
    name: string;
    url: string;
    icon: `data:image/${"svg+xml" | "webp" | "png" | "gif"};base64,${string}`;
    readyState: WalletReadyState.NotDetected;
    isAIP62Standard: true;
    deeplinkProvider?: string;
    isAptosNativeWallet?: boolean;
}
export type AvailableWallets = "Continue with Apple" | "Continue with Google" | "OKX Wallet" | "Petra" | "Nightly" | "Pontem Wallet" | "MSafe" | "Rimosafe";
type InputTransactionDataInner = {
    sender?: AccountAddressInput;
    data: InputGenerateTransactionPayloadData;
    options?: InputGenerateTransactionOptions & {
        expirationSecondsFromNow?: number;
        expirationTimestamp?: number;
    };
    /** This will always be set to true if a custom transaction submitter is provided. */
    withFeePayer?: boolean;
};
/**
 * If `transactionSubmitter` is set it will be used, and override any transaction
 * submitter configured in the DappConfig.
 *
 * The `pluginParams` parameter is used to provide additional parameters to a
 * transaction submitter plugin, whether provided here or configured in the
 * DappConfig.
 */
export type InputTransactionData = InputTransactionDataInner & InputTransactionPluginData;
export type WalletInfo = {
    name: string;
    icon: string;
    url: string;
};
export {};
//# sourceMappingURL=types.d.ts.map