{"version":3,"sources":["../../src/BellhopEventDispatcher.ts"],"sourcesContent":["export interface PriorityFunction extends Function {\n  _priority: number\n}\n\n/**\n * Function with a added priority type\n * @typedef {Function} PriorityFunction\n * @property {number} _priority\n */\n\n/**\n * Generic event dispatcher\n * @class  BellhopEventDispatcher\n */\nexport class BellhopEventDispatcher {\n  private _listeners: any = {}\n\n  /**\n   *  Add an event listener to listen to an event from either the parent or iframe\n   *  @method on\n   *  @param {String} name The name of the event to listen for\n   *  @param {PriorityFunction} callback The handler when an event is triggered\n   *  @param {number} [priority=0] The priority of the event listener. Higher numbers are handled first.\n   */\n  on(name: string, callback: any, priority = 0) {\n    if (!this._listeners[name]) {\n      this._listeners[name] = []\n    }\n    callback._priority = priority\n\n    // If callback is already set to this event\n    if (-1 !== this._listeners[name].indexOf(callback)) {\n      return\n    }\n\n    this._listeners[name].push(callback)\n\n    if (this._listeners[name].length > 1) {\n      this._listeners[name].sort(this.listenerSorter)\n    }\n  }\n\n  /**\n   *  Sorts listeners added by .on() by priority\n   * @private\n   * @param {PriorityFunction} a\n   * @param {PriorityFunction} b\n   * @returns {number};\n   */\n  listenerSorter(a: PriorityFunction, b: PriorityFunction) {\n    return a._priority - b._priority\n  }\n\n  /**\n   *  Remove an event listener\n   *  @method off\n   *  @param {String} name The name of event to listen for. If undefined, remove all listeners.\n   *  @param {Function} [callback] The optional handler when an event is triggered, if no callback\n   *         is set then all listeners by type are removed\n   */\n  off(name: string, callback: Function) {\n    if (this._listeners[name] === undefined) {\n      return\n    }\n\n    if (callback === undefined) {\n      delete this._listeners[name]\n      return\n    }\n\n    const index = this._listeners[name].indexOf(callback)\n\n    ;-1 < index ? this._listeners[name].splice(index, 1) : undefined\n  }\n\n  /**\n   *  Trigger any event handlers for an event type\n   *  @method trigger\n   *  @param {object | String} event The event to send\n   *  @param {object} [data = {}] optional data to send to other areas in the app that are listening for this event\n   */\n  trigger(event: any, data = {}) {\n    if (typeof event == 'string') {\n      event = {\n        type: event,\n        data: 'object' === typeof data && null !== data ? data : {}\n      }\n    }\n\n    if ('undefined' !== typeof this._listeners[event.type]) {\n      for (let i = this._listeners[event.type].length - 1; i >= 0; i--) {\n        this._listeners[event.type][i](event)\n      }\n    }\n  }\n\n  /**\n   * Reset the listeners object\n   * @method  destroy\n   */\n  destroy() {\n    this._listeners = {}\n  }\n}\n"],"mappings":"AAcO,IAAMA,EAAN,KAA6B,CAA7B,cACL,KAAQ,WAAkB,CAAC,EAS3B,GAAGC,EAAcC,EAAeC,EAAW,EAAG,CACvC,KAAK,WAAWF,CAAI,IACvB,KAAK,WAAWA,CAAI,EAAI,CAAC,GAE3BC,EAAS,UAAYC,EAGV,KAAK,WAAWF,CAAI,EAAE,QAAQC,CAAQ,IAA7C,KAIJ,KAAK,WAAWD,CAAI,EAAE,KAAKC,CAAQ,EAE/B,KAAK,WAAWD,CAAI,EAAE,OAAS,GACjC,KAAK,WAAWA,CAAI,EAAE,KAAK,KAAK,cAAc,EAElD,CASA,eAAeG,EAAqBC,EAAqB,CACvD,OAAOD,EAAE,UAAYC,EAAE,SACzB,CASA,IAAIJ,EAAcC,EAAoB,CACpC,GAAI,KAAK,WAAWD,CAAI,IAAM,OAC5B,OAGF,GAAIC,IAAa,OAAW,CAC1B,OAAO,KAAK,WAAWD,CAAI,EAC3B,MACF,CAEA,IAAMK,EAAQ,KAAK,WAAWL,CAAI,EAAE,QAAQC,CAAQ,EAEnD,GAAKI,GAAQ,KAAK,WAAWL,CAAI,EAAE,OAAOK,EAAO,CAAC,CACrD,CAQA,QAAQC,EAAYC,EAAO,CAAC,EAAG,CAQ7B,GAPI,OAAOD,GAAS,WAClBA,EAAQ,CACN,KAAMA,EACN,KAAmB,OAAOC,GAApB,UAAqCA,IAAT,KAAgBA,EAAO,CAAC,CAC5D,GAGkB,OAAO,KAAK,WAAWD,EAAM,IAAI,EAAjD,IACF,QAASE,EAAI,KAAK,WAAWF,EAAM,IAAI,EAAE,OAAS,EAAGE,GAAK,EAAGA,IAC3D,KAAK,WAAWF,EAAM,IAAI,EAAEE,CAAC,EAAEF,CAAK,CAG1C,CAMA,SAAU,CACR,KAAK,WAAa,CAAC,CACrB,CACF","names":["BellhopEventDispatcher","name","callback","priority","a","b","index","event","data","i"]}