import{a as r}from"./chunk-RV257KMF.mjs";var h=class extends r{constructor(e=Math.random()*100|0){super(),this.id=`BELLHOP:${e}`,this.connected=!1,this.isChild=!0,this.connecting=!1,this.debug=!1,this.origin="*",this.supported=!1,this._sendLater=[],this.iframe=null,this.receive=this.receive.bind(this)}receive(e){if(this.target===e.source){if(this.logDebugMessage(!0,e),e.data!=="connected"){let t=e.data;if(typeof t=="string")try{t=JSON.parse(t)}catch(i){console.warn("Bellhop error: ",i)}this.connected&&typeof t=="object"&&t.type&&this.trigger(t);return}this.onConnectionReceived(e.data)}}onConnectionReceived(e){if(this.connecting=!1,this.connected=!0,!this.isChild){if(!this.target)return;this.target.postMessage(e,this.origin)}for(let t=0;t<this._sendLater.length;t++){let{type:i,data:n}=this._sendLater[t];this.send(i,n)}this._sendLater.length=0,this.trigger("connected")}connect(e,t="*"){this.connecting||(this.disconnect(),this.connecting=!0,e instanceof HTMLIFrameElement&&(this.iframe=e),this.isChild=e===void 0,this.supported=!0,this.isChild&&(this.supported=window!=e),this.origin=t,window.addEventListener("message",this.receive),this.isChild&&(window===this.target?this.trigger("failed"):this.target?.postMessage("connected",this.origin)))}disconnect(){this.connected=!1,this.connecting=!1,this.origin="",this.iframe=null,this.isChild=!0,this._sendLater.length=0,window.removeEventListener("message",this.receive)}send(e,t={}){if(typeof e!="string")throw"The event type must be a string";let i={type:e,data:t};this.logDebugMessage(!1,i),this.connecting?this._sendLater.push(i):this.target?.postMessage(JSON.stringify(i,(n,s)=>typeof s=="bigint"?s.toString():s),this.origin)}fetch(e,t,i={},n=!1){if(!this.connecting&&!this.connected)throw"No connection, please call connect() first";let s=o=>{n&&this.off(o.type,s),t(o)};this.on(e,s),this.send(e,i)}respond(e,t={},i=!1){let n=this,s=async function(o){i&&n.off(o,s),typeof t=="function"?n.send(o.type,await t()):n.send(o.type,t)};this.on(e,s)}logDebugMessage(e=!1,t){this.debug&&typeof this.debug=="function"?console.log({isChild:this.isChild,received:e,message:t}):this.debug&&console.log(`Bellhop Instance (${this.isChild?"Child":"Parent"}) ${e?"Received":"Sent"}`,t)}destroy(){super.destroy(),this.disconnect(),this._sendLater.length=0}get target(){return this.isChild?window.parent:this.iframe?.contentWindow}};export{h as a};
//# sourceMappingURL=chunk-KFOJX3V6.mjs.map